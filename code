        for i in range(1, N, 1):
            top_node = min(i, jmax)
            step_i = self.steps[i]
            sum_Node = 0
            #Update pure security prices

            for j in range(-top_node, top_node + 1, 1):
                Q[i][j] = 0
                for k in range(-(top_node-1), (top_node-1)):
                    Q[i][j] = Q[i][j] + Q[i-1][k] * pu[i][j+1] *d[i][j]

            sum = 0
            for j in range(-top_node, top_node + 1, 1):
                    sum += Q[i][j] * math.exp(-j * dt * dr)
            a.append((math.log(sum) - math.log(P[i + 1])) / dt)

            for j in range(-top_node, top_node + 1, 1):
                  r[i][j] += a[i]
                  d[i][j] = math.exp(-r[i][j] * dt)
                  step_i.nodes[j].r = r[i][j]
